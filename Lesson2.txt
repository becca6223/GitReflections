**What happens when you initialize a repository? Why do you need to do it?

It will show that you create a git repository and with a .git file. You do this because it can keep different version of your files. 

**How is the stagin area different from the working directory and the repository? What value do you think it offers? 

Staging area is a stage that the user specify what files the user would like to commit into repo. It let user decide what files to commit, which gives user more flexibile space.

**How can you use the staging area to make sure you have one commmit per logical change? 

you can use git diff --staged to check the staged files anand the commit files and see if there is only one logical change per commit.

**What are some situations when branches would be helpful in keeping your history organized? How would branches help?

You would want to use branches when you want to try something different but not sure if that's what you want in your main project yet. 

**How do the diarams help you visualize the branch structure? 

It will help me to know how git log works, and what commits in the history I can see once I have more and more branches.

**What are the pros and cons of Git's automatic merging vs always doing merges manually

automatic: pro: save time, con: you don't know how it merge 
manually: con: you know what the files look like after merging, pro: time consuming 
